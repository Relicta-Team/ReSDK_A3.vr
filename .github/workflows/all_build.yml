
name: All build

on:
  push:
    branches:
      - main
    paths:
      - Src/client/**
      - Src/host/**
      - Src/ReBridge/**
      - Src/Scripts/**
      - Src/Scripts/*.sqf
      - Src/Scripts/*.cpp
      - Src/Scripts/SETTINGS.h
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    paths:
      - Src/client/**
      - Src/host/**
      - Src/ReBridge/**
      - Src/Scripts/**
      - Src/Scripts/*.sqf
      - Src/Scripts/*.cpp
      - Src/Scripts/SETTINGS.h
  workflow_dispatch:

jobs:
  mapvalidator:
    name: Validation
    runs-on: windows-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3.1.4
      - uses: actions/checkout@v3
      - name: Running Map Validator
        run: |
          python -V
          python Third-party/BuildTools/map_validator.py map_cfg_light_check ${{ github.workspace }}
        working-directory: ${{ github.workspace }}
  allbuild:
    name: Build
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        build_type:
          - client
          - client-debug
          - server
          - server-debug
        needs:
          - mapvalidator
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3.1.4
      - uses: actions/checkout@v3
      - name: Check Map Validator result
        if: ${{ needs.mapvalidator.outputs.map_validation == 'success' }}
        run: echo "Validation succeeded, proceeding with build..."
      - name: Validate ${{ matrix.build_type }}
        continue-on-error: true
        run: | 
          echo "::group::VM validate"
          Third-party/BuildTools/Validate.bat ${{ matrix.build_type }}
          echo "::endgroup::"
        working-directory: ${{ github.workspace }}
      - name: Post validate ${{ matrix.build_type }}
        run: | 
          python -V
          echo "::group::Python validate"
          python Third-party/BuildTools/parse_output.py ./Third-party/BuildTools/output.txt ./
          echo "::endgroup::"
        working-directory: ${{ github.workspace }}
      - name: Upload output
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Output log ${{ matrix.build_type }}
          path: ./Third-party/BuildTools/output.txt
  updateversion:
    if: github.event_name != 'workflow_dispatch' && github.repository == 'Relicta-Team/ReSDK_A3.vr' && github.event_name != 'pull_request'
    name: Update build number
    runs-on: windows-latest
    needs:
      - allbuild
      - mapvalidator
    steps:
      - uses: actions/checkout@v3
      - name: Increment build number
        id: new_version  
        shell: powershell
        run: |
          echo Workspace is ${{github.workspace}}
          Third-party/BuildTools/update_version.exe path:.\ updpath
          $version = Get-Content .\src\VERSION
          Write-Host "Now version is: $version"
          echo "version_value=${version}" >> $env:GITHUB_OUTPUT
          
      - name: Push changes
        uses: test-room-7/action-update-file@v1  
        if: steps.new_version.outputs.version_value && github.repository == 'Relicta-Team/ReSDK_A3.vr'
        with:
          committer-name: Autoupdater
          file-path: |
            Src/VERSION
            Src/version.hpp
          commit-msg: Update - ${{steps.new_version.outputs.version_value}}
          github-token: ${{secrets.TOKEN}}
  generatedocs:
    runs-on: windows-latest
    name: Generate documentation
    needs: 
      - updateversion
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3.1.4
      - uses: actions/checkout@v3
      - name: Generating documentation
        working-directory: ${{ github.workspace }}/Third-party/Docgen
        run: |
          python -V
          python main.py ./../../Src
      
      - name: Push changes
        uses: test-room-7/action-update-file@v1
        with:
          committer-name: Docgen
          file-path: |
            Documentation/API/**
          commit-msg: Generated documentation
          github-token: ${{secrets.TOKEN}}
        
